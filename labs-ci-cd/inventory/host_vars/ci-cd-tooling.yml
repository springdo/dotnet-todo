---
ansible_connection: local

jenkins_name: jenkins
sonarqube_name: sonarqube
hoverfly_name: hoverfly
nexus_password: "admin123"

jenkins_persistence_type: "persistent"

jenkins:
  build:
    NAME: "{{ jenkins_name }}"
    SOURCE_REPOSITORY_URL: https://github.com/rht-labs/s2i-config-jenkins.git
    SOURCE_REPOSITORY_REF: v1.5
    IMAGE_STREAM_NAMESPACE: "{{ ci_cd_namespace }}"
    SECRET_NAME: "jenkins-git-password"
    USERNAME: gitlab-sa
    PASSWORD: "some-secret-password"
    SOURCE_REPOSITORY_SECRET: "jenkins-git-password"
  deploy:
    NAMESPACE: "{{ ci_cd_namespace }}"
    JENKINS_IMAGE_STREAM_TAG: "{{ jenkins_name }}:latest"
    MEMORY_LIMIT: 6Gi
    JENKINS_OPTS: "--sessionTimeout=720"
    VOLUME_CAPACITY: 20Gi
    MEMORY_REQUEST: 2Gi
    JVM_ARCH: x86_64
    GITLAB_HOST: "gitlab.mydomain.example.com"
    GITLAB_TOKEN: "token123"
    GITLAB_GROUP_NAME: "rht-labs"

jenkins_slaves:
  build:
    ansible:
      NAME: jenkins-slave-ansible
      SOURCE_CONTEXT_DIR: jenkins-slaves/jenkins-slave-ansible
      SOURCE_REPOSITORY_REF: "{{ cop_quickstarts_raw_version_tag }}"
      SOURCE_REPOSITORY_URL: "{{ cop_quickstarts }}"

dotnet:
  NAME: jenkins-slave-dotnet
  DOCKERFILE_PATH: Dockerfile
  BUILDER_IMAGE_NAME: openshift/jenkins-slave-base-centos7:v3.11
  SOURCE_CONTEXT_DIR: "2.2"
  SOURCE_REPOSITORY_REF: "master"
  SOURCE_REPOSITORY_URL: "https://github.com/redhat-developer/dotnet-jenkins-slave.git"    

nexus:
  secret:
    SECRET_NAME: "nexus-password"
    USERNAME: admin
    PASSWORD: "{{ nexus_password }}"
  deploy:
    VOLUME_CAPACITY: 10Gi
    MEMORY_LIMIT: 2Gi
    CONTAINER_IMAGE: sonatype/nexus3:3.15.2

zalenium:
  NAMESPACE: "{{ ci_cd_namespace }}"
  IMAGE: "dosel/zalenium:latest"
  CPU_REQUEST: 200m
  MEMORY_REQUEST: 400Mi
  CPU_LIMIT: 1000m
  MEMORY_LIMIT: 2Gi

openshift_cluster_content:
- galaxy_requirements:
  - pre_post_requirements.yml # Uses openshift-label role from casl-ansible
# CI/CD builds are customisations to base software to enhance their functionality or make them OCP ready 
- object: ci-cd-builds
  content:
  - name: jenkins-s2i
    template: "{{ openshift_templates_raw }}/{{ openshift_templates_raw_version_tag }}/jenkins-s2i-build/jenkins-s2i-build-template.yml"
    params_from_vars: "{{ jenkins.build }}"
    namespace: "{{ ci_cd_namespace }}"
    tags:
    - jenkins
    - jenkins-build
    - ci-cd-builds

# Secrets stored in OCP land and sync'd to Jenkins for consumption
- object: ci-cd-secrets
  content:
  - name: nexus-secret
    template: "{{ openshift_templates_raw }}/{{ openshift_templates_raw_version_tag }}/secrets/secret-user-pass-plaintext.yml"
    params_from_vars: "{{ nexus.secret }}"
    namespace: "{{ ci_cd_namespace }}"
    tags:
    - jenkins
    - secret
    - ci-cd-secrets
  - name: jenkins-secret
    template: "{{ openshift_templates_raw }}/{{ openshift_templates_raw_version_tag }}/secrets/secret-user-pass-plaintext.yml"
    params_from_vars: "{{ jenkins.build }}"
    namespace: "{{ ci_cd_namespace }}"
    tags:
    - jenkins
    - secret
    - ci-cd-secrets

# Jenkins slave agents to give him some superpowers in OCP land
- object: jenkins-slave-nodes
  content:
  - name: jenkins-slave-agents
    template: "{{ cop_quickstarts_raw }}/{{ cop_quickstarts_raw_version_tag }}/.openshift/templates/jenkins-slave-generic-template.j2"
    params_from_vars: "{{ jenkins_slaves.build }}"
    namespace: "{{ ci_cd_namespace }}"
    tags:
    - jenkins-slaves
  - name: jenkins-slave-agents
    template: "https://raw.githubusercontent.com/redhat-cop/containers-quickstarts/master/.openshift/templates/jenkins-slave-generic-template.yml"
    params_from_vars: "{{ dotnet }}"
    namespace: "{{ ci_cd_namespace }}"
    tags:
    - jenkins-slaves

# CI/CD Deployments is the OpenShift Deployment Configs and all
# supporting tooling, pre and post hooks needed to setup and configure a comprehensive tool chain
- object: ci-cd-deployments
  content: ## SONARQUBE DB DEPLOYMENT MUST COME BEFORE SONARQUBE DEPLOYMENT OR THE JDBC SECRETS WILL NOT BE CREATED PROPERLY
  - name: nexus
    template: "{{ openshift_templates_raw }}/{{ openshift_templates_raw_version_tag }}/nexus/nexus-deployment-template.yml"
    params_from_vars: "{{ nexus.deploy }}"
    namespace: "{{ ci_cd_namespace }}"
    post_steps:
    - role: infra-ansible/roles/config-nexus
      vars:
        nexus_namespace: "{{ ci_cd_namespace }}"
        nexus_user: "admin"
        nexus_password: "{{ nexus_password }}"
        nexus_api_base_path: /service/rest/v1
    tags:
      - nexus
      - nexus-deploy
      - ci-cd-deployments
  - name: jenkins
    template: "{{ openshift_templates_raw }}/{{ openshift_templates_raw_version_tag }}/jenkins/jenkins-{{ jenkins_persistence_type }}-template.yml"
    params_from_vars: "{{ jenkins.deploy }}"
    namespace: "{{ ci_cd_namespace }}"
    tags:
      - jenkins
      - jenkins-deploy
      - jenkins-{{ jenkins_persistence_type }}
      - ci-cd-deployments
  - name: zalenium
    template: "{{ cop_quickstarts_raw }}/{{ cop_quickstarts_raw_version_tag }}/zalenium/.openshift/templates/zalenium-deployment.yml"
    params_from_vars: "{{ zalenium }}"
    namespace: "{{ ci_cd_namespace }}"
    tags:
      - zalenium
      - zalenium-deploy
      - ci-cd-deployments